{
    "swagger": "2.0",
    "info": {
        "description": "",
        "version": "1.5.0"
    },
    "host": "api.backand.com:8078",
    "schemes": [
        "https"
    ],
    "basePath": "/1",
    "produces": [
        "application/json"
    ],
    "tags": [
        {
            "name": "Security & Authentication"
        },
        {
            "name": "Objects"
        },
        {
            "name": "Actions"
        },
        {
            "name": "Queries"
        },
        {
            "name": "Users"
        },
        {
            "name": "Database Table Configuration"
        },
        {
            "name": "App Configuration"
        },
        {
            "name": "Dashboard Configuration"
        }
    ],
    "paths": {
        "/token": {
            "post": {
                "summary": "sign in",
                "description": "Backand API requires an access_token. A Backand user can get one by authenticating with Backand's username and password (It will be valid for 24 hours)",
                "tags": [
                    "Security & Authentication"
                ],
                "parameters": [
                    {
                        "name": "grant_type",
                        "in": "form",
                        "description": "The value is always \"password\"",
                        "required": true,
                        "type": "string",
                        "defaultValue": "password"
                    },
                    {
                        "name": "username",
                        "in": "form",
                        "description": "Backand username",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "password",
                        "in": "form",
                        "description": "Backand password",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "appname",
                        "in": "form",
                        "description": "Backand app",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "access_token"
                    }
                },
                "consumes": [
                    "application/x-www-form-urlencoded"
                ]
            }
        },
        "/user/signup": {
            "post": {
                "summary": "Sign Up",
                "description": "Sign up a user to the app",
                "tags": [
                    "Security & Authentication"
                ],
                "parameters": [
                    {
                        "name": "SignUpToken",
                        "in": "header",
                        "description": "A security token to prevent malicious attacks",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "user",
                        "in": "body",
                        "description": "The user to be signed up",
                        "required": true,
                        "schema": {
                            "$ref": "NewUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return __metadata with the total number of the entire items of the list and the items array",
                        "schema": {
                            "$ref": "SignUpResponse"
                        }
                    }
                }
            }
        },
        "/objects/{name}": {
            "get": {
                "summary": "Get list of items",
                "description": "Get list of items with filter, sort and paging parameters",
                "tags": [
                    "Objects"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The object name",
                        "required": true,
                        "type": "array",
                        "format": "string",
                        "enum": [
                            "blank"
                        ]
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "How many items per page",
                        "required": false,
                        "type": "number",
                        "default": 20
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Which page to display",
                        "required": false,
                        "type": "number",
                        "default": 1
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "A filter array were each item has the properties fieldName, operator and value.<br>The operator options depend on the field type.<br><a class=\"operators-link\">More for the opertors options</a><br><div class=operators><ul>numeric or date fields<li>equals</li><li>notEquals</li><li>greaterThan</li><li>greaterThanOrEqualsTo</li><li>lessThan</li><li>lessThanOrEqualsTo</li><li>empty</li><li>notEmpty</li></ul><ul>textual fields<li>equals</li><li>notEquals</li><li>startsWith</li><li>contains</li><li>notContains</li><li>empty</li><li>notEmpty</li></ul><ul>related fields<li>in</li></ul></div>",
                        "required": false,
                        "type": "array",
                        "schema": {
                            "$ref": "Filter"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "A sort array were each item has the properties fieldName and order.<br>The order options are \"asc\" or \"desc\".",
                        "required": false,
                        "type": "array",
                        "schema": {
                            "$ref": "Sort"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Free text search",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "deep",
                        "in": "query",
                        "description": "When set to true, brings the related items from the related objects",
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of items"
                    }
                }
            },
            "post": {
                "summary": "Create new item",
                "description": "Create a new item. In order to create new item you must include the required fields and any other field to be included in the new item. You can JUST copy the Json of the GET and update the values.",
                "tags": [
                    "Objects"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The object name",
                        "required": true,
                        "type": "array",
                        "format": "string",
                        "enum": [
                            "blank"
                        ]
                    },
                    {
                        "name": "returnObject",
                        "in": "query",
                        "description": "Set this to true when you have server side business rules that causes additional changes to the object. In that case this request will return the created object",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "object",
                        "in": "body",
                        "description": "The object that you want to create",
                        "required": false,
                        "schema": {
                            "$ref": "Fields"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "By default, returns the new item identity (id), unless returnObject is set to true, then it returns the created object"
                    }
                }
            }
        },
        "/objects/{name}/{id}": {
            "get": {
                "summary": "Get single item",
                "description": "Return single item includes lists of related objects.",
                "tags": [
                    "Objects"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The object name",
                        "required": true,
                        "type": "array",
                        "format": "string",
                        "enum": [
                            "blank"
                        ]
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The item identity (id)",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "deep",
                        "in": "query",
                        "description": "When set to true, brings the related parent and child rows into the json structure",
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return __metadata with the object identity",
                        "schema": {
                            "$ref": "TablePost"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update an item",
                "description": "Update a single item. In order to update JUST copy the Json of the GET as is and update the fields values OR includes the fields that need to be updated.",
                "tags": [
                    "Objects"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The object name",
                        "required": true,
                        "type": "array",
                        "format": "string",
                        "enum": [
                            "blank"
                        ]
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The item identity (id)",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "returnObject",
                        "in": "query",
                        "description": "Set this to true when you have server side business rules that causes additional changes to the object. In that case this request will return the updated object",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "object",
                        "in": "body",
                        "description": "The object that you want to update",
                        "required": false,
                        "schema": {
                            "$ref": "Fields"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "By default, returns no data, unless returnObject is set to true, then it returns the updated object"
                    }
                }
            },
            "delete": {
                "summary": "Delete an item",
                "description": "Delete an item. Must provide the item identity (id)",
                "tags": [
                    "Objects"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The object name",
                        "required": true,
                        "type": "array",
                        "format": "string",
                        "enum": [
                            "blank"
                        ]
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The item identity (id)",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the deleted item identity (id)"
                    }
                }
            }
        },
        "/objects/action/{objectName}/{id}": {
            "get": {
                "summary": "Custom Action",
                "description": "Perform a Custom Action",
                "tags": [
                    "Actions"
                ],
                "parameters": [
                    {
                        "name": "objectName",
                        "in": "path",
                        "description": "The object name",
                        "required": true,
                        "type": "array",
                        "format": "string",
                        "enum": [
                            "blank"
                        ]
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The item identity (id)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "actionName",
                        "in": "query",
                        "description": "The action name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "parameters",
                        "in": "query",
                        "description": "json object with all predefined action's parameters",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The returned object from the action"
                    }
                }
            }
        },
        "/query/data/{queryName}": {
            "get": {
                "summary": "Custom Action",
                "description": "Perform a Custom Action",
                "tags": [
                    "Queries"
                ],
                "parameters": [
                    {
                        "name": "queryName",
                        "in": "path",
                        "description": "The query name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "parameters",
                        "in": "query",
                        "description": "json object with all predefined query's parameters",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of items"
                    }
                }
            }
        }
    },
    "definitions": {
        "Page": {
            "properties": {
                "id": {
                    "type": "number"
                },
                "name": {
                    "type": "string",
                    "description": "Page caption"
                },
                "partType": {
                    "type": "string",
                    "description": "Page object type: table or dashboard"
                },
                "partId": {
                    "type": "number",
                    "description": "Object identification"
                }
            }
        },
        "Workspace": {
            "properties": {
                "id": {
                    "type": "number"
                },
                "name": {
                    "type": "string",
                    "description": "Caption"
                },
                "homepage": {
                    "type": "number",
                    "description": "The page id of the first page to display"
                },
                "pages": {
                    "type": "array",
                    "$ref": "Page"
                }
            }
        },
        "User": {
            "properties": {
                "username": {
                    "type": "string"
                },
                "fullName": {
                    "type": "number"
                },
                "role": {
                    "type": "number",
                    "description": "Backand Role"
                }
            }
        },
        "Config": {
            "properties": {
                "userPreviewUrl": {
                    "type": "string",
                    "description": "The hosting URL"
                },
                "title": {
                    "type": "string",
                    "description": "the app's title"
                },
                "workspace": {
                    "type": "array",
                    "$ref": "Workspace"
                },
                "user": {
                    "$ref": "User"
                }
            }
        },
        "Table": {
            "properties": {
                "totalRows": {
                    "type": "number"
                }
            }
        },
        "Dashboard": {
            "properties": {
                "totalRows": {
                    "type": "number"
                }
            }
        },
        "Sort": {
            "properties": {
                "fieldName": {
                    "type": "string",
                    "optional": false
                },
                "order": {
                    "optional": false,
                    "type": "string",
                    "description": "asc or desc"
                }
            }
        },
        "Filter": {
            "properties": {
                "fieldName": {
                    "type": "string"
                },
                "operator": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "TableAutocomplete": {
            "properties": {
                "TableName": {
                    "type": "object"
                }
            }
        },
        "TableDates": {
            "properties": {
                "fieldName": {
                    "type": "string",
                    "descripttion": "Date in javascript syntax"
                }
            }
        },
        "__metadata": {
            "properties": {
                "id": {
                    "type": "number",
                    "desription": "The item identity (id)"
                },
                "autocomplete": {
                    "type": "array",
                    "$ref": "TableAutocomplete"
                },
                "dates": {
                    "type": "array",
                    "$ref": "TableDates"
                }
            }
        },
        "_metadata": {
            "properties": {
                "id": {
                    "type": "number",
                    "desription": "The item identity (id)"
                }
            }
        },
        "Fields": {
            "empty": null
        },
        "TablePost": {
            "properties": {
                "__metadata": {
                    "$ref": "__metadata"
                },
                "fields": {
                    "type": "object"
                }
            }
        },
        "Error": {
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                },
                "fields": {
                    "type": "string"
                }
            }
        },
        "NewUser": {
            "properties": {
                "firstName": {
                    "type": "string",
                    "desription": "The user's first name"
                },
                "lastName": {
                    "type": "string",
                    "desription": "The user's last name"
                },
                "email": {
                    "type": "string",
                    "desription": "The user's email"
                },
                "password": {
                    "type": "string",
                    "desription": "The user's password"
                },
                "confirmPassword": {
                    "type": "string",
                    "desription": "Confirmation on the user's password"
                }
            }
        },
        "SignUpResponse": {
            "properties": {
                "username": {
                    "type": "string",
                    "desription": "The user's username which is his email"
                },
                "currentStatus": {
                    "type": "integer",
                    "desription": "The signup status code"
                },
                "message": {
                    "type": "string",
                    "desription": "The signup status desription"
                },
                "listOfPossibleStatus": {
                    "type": "array",
                    "$ref": "SignupStatus",
                    "desription": "A list of all the sign up possible status"
                }
            }
        },
        "SignupStatus": {
            "properties": {
                "status": {
                    "type": "integer",
                    "desription": "The signup status code"
                },
                "message": {
                    "type": "string",
                    "desription": "The signup status desription"
                }
            }
        },
        "SignInResponse": {
            "properties": {
                "access_token": {
                    "type": "string",
                    "desription": "an OAuth2 access token"
                },
                "token_type": {
                    "type": "string",
                    "desription": "fixed \"bearer\""
                },
                "expires_in": {
                    "type": "integer",
                    "desription": "expiration due in seconds"
                }
            }
        }
    }
}